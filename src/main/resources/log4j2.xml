<?xml version="1.0" encoding="UTF-8"?>
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration>
    <!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->

    <!--变量配置-->
    <Properties>
        <!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符-->
        <property name="LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %C{36} %highlight(%l) - %msg%xEx%n" />
        <property name="STDOUT_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight{%-5level} %C{36} %style{%l} - %msg%xEx%n" />
        <property name="SIMPLE_LOG_PATTERN" value="%d{yyyy-MM-dd HH:mm:ss}  %msg%n" />
        <!-- 定义日志存储的路径 -->
        <property name="FILE_PATH" value="/Users/dongzhen/IdeaProjects/snowLogs/" />
        <property name="FILE_NAME" value="snow" />
    </Properties>

    <appenders>

        <console name="CONSOLE" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${STDOUT_LOG_PATTERN}"/>
            <!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
        </console>

        <console name="CONSOLE_SIMPLE" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="${SIMPLE_LOG_PATTERN}"/>
            <!--控制台只输出level及其以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
        </console>

        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，适合临时测试用-->
        <File name="FILE_TEST" fileName="${FILE_PATH}/test.log" append="false">
            <PatternLayout pattern="${LOG_PATTERN}"/>
        </File>

        <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileInfo" fileName="${FILE_PATH}/info.log" filePattern="${FILE_PATH}/${FILE_NAME}-INFO-%d{yyyy-MM-dd}_%i.log.gz">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，默认是1 hour-->
                <TimeBasedTriggeringPolicy interval="12" modulate="true"/>
                <SizeBasedTriggeringPolicy size="80MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖-->
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

        <!-- 这个会打印出所有的warn及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileWarn" fileName="${FILE_PATH}/warn.log" filePattern="${FILE_PATH}/${FILE_NAME}-WARN-%d{yyyy-MM-dd}_%i.log.gz">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="warn" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，默认是1 hour-->
                <TimeBasedTriggeringPolicy interval="24" modulate="true"/>
                <SizeBasedTriggeringPolicy size="80MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖-->
            <DefaultRolloverStrategy max="60"/>
        </RollingFile>

        <!-- 这个会打印出所有的error及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
        <RollingFile name="RollingFileError" fileName="${FILE_PATH}/error.log" filePattern="${FILE_PATH}/ERROR/${FILE_NAME}-ERROR-%d{yyyy-MM-dd}_%i.log.gz">
            <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
            <ThresholdFilter level="error" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <!--interval属性用来指定多久滚动一次，默认是1 hour-->
                <TimeBasedTriggeringPolicy interval="24" modulate="true"/>
                <SizeBasedTriggeringPolicy size="80MB"/>
            </Policies>
            <!-- DefaultRolloverStrategy属性如不设置，则默认为最多同一文件夹下7个文件开始覆盖-->
            <DefaultRolloverStrategy max="60">
                <Delete basePath="${FILE_PATH}/ERROR/" maxDepth="1">
                    <IfFileName glob="*.log.gz" />
                    <!-- 小时：H，天：d -->
                    <IfLastModified age="5d" />
                </Delete>
            </DefaultRolloverStrategy>
        </RollingFile>

        <RollingFile name="METHOD" fileName="${FILE_PATH}/method.log" filePattern="${FILE_PATH}/${FILE_NAME}-METHOD-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                <SizeBasedTriggeringPolicy size="120MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

        <RollingFile name="REQ" fileName="${FILE_PATH}/req.log" filePattern="${FILE_PATH}/${FILE_NAME}-REQ-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                <SizeBasedTriggeringPolicy size="120MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

        <RollingFile name="FILTER" fileName="${FILE_PATH}/filter.log" filePattern="${FILE_PATH}/${FILE_NAME}-FILTER-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                <SizeBasedTriggeringPolicy size="120MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

        <RollingFile name="LOGIN" fileName="${FILE_PATH}/login.log" filePattern="${FILE_PATH}/${FILE_NAME}-LOGIN-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                <SizeBasedTriggeringPolicy size="20MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

        <RollingFile name="DRUID" fileName="${FILE_PATH}/druid.log" filePattern="${FILE_PATH}/${FILE_NAME}-DRUID-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${SIMPLE_LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                <SizeBasedTriggeringPolicy size="80MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

        <RollingFile name="SQL" fileName="${FILE_PATH}/sql.log" immediateFlush="false"  filePattern="${FILE_PATH}/${FILE_NAME}-SQL-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${SIMPLE_LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                <SizeBasedTriggeringPolicy size="20MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

        <!--<RollingRandomAccessFile name="SQL" fileName="${FILE_PATH}/sql.log"  filePattern="${FILE_PATH}/${FILE_NAME}-SQL-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${SIMPLE_LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                <SizeBasedTriggeringPolicy size="10MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingRandomAccessFile>-->

        <RollingFile name="DATASOURCE" fileName="${FILE_PATH}/datasource.log" filePattern="${FILE_PATH}/${FILE_NAME}-DATASOURCE-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${SIMPLE_LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                <SizeBasedTriggeringPolicy size="80MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

        <RollingFile name="JOB" fileName="${FILE_PATH}/job.log" filePattern="${FILE_PATH}/${FILE_NAME}-JOB-%d{yyyy-MM-dd}_%i.log.gz">
            <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
            <PatternLayout pattern="${LOG_PATTERN}"/>
            <Policies>
                <TimeBasedTriggeringPolicy interval="6" modulate="true"/>
                <SizeBasedTriggeringPolicy size="50MB"/>
            </Policies>
            <DefaultRolloverStrategy max="30"/>
        </RollingFile>

    </appenders>

    <!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。-->
    <!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>

        <!--调整数据库事务的打印级别 .HibernateTransactionManager .DataSourceTransactionManager-->
        <logger name="org.springframework.transaction" level="INFO"/>
        <logger name="org.springframework.orm.hibernate5" level="INFO"/>
        <logger name="org.springframework.jdbc.datasource" level="INFO"/>
        <logger name="org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver" level="INFO"/>
        <!--hibernate的INFO较多,忽略之-->
        <logger name="org.hibernate" level="WARN"/>
        <logger name="com.alibaba.druid.filter.stat.StatFilter" level="DEBUG" additivity="false">
            <AppenderRef ref="CONSOLE" />
            <AppenderRef ref="DRUID" />
        </logger>
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <logger name="org.mybatis" level="INFO" additivity="false">
            <AppenderRef ref="CONSOLE"/>
        </logger>
        <!--监控系统信息-->
        <!--若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出。-->
        <Logger name="org.springframework" level="INFO" additivity="false">
            <AppenderRef ref="CONSOLE"/>
        </Logger>

        <Logger name="com.l.interceptor.LogInterceptor" level="DEBUG" additivity="false">
            <AppenderRef ref="CONSOLE"/>
        </Logger>

        <!--Service方法监控-->
        <logger name="METHOD_LOG" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="METHOD" />
        </logger>

        <!--Filter方法监控-->
        <logger name="FILTER_LOG" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="FILTER" />
        </logger>

        <!--req方法监控-->
        <logger name="REQ_LOG" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="REQ" />
        </logger>

        <!--登录日志-->
        <logger name="LOGIN_LOG" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="LOGIN" />
        </logger>

        <logger name="DATASOURCE" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="DATASOURCE" />
        </logger>

        <logger name="SQL" level="INFO" additivity="false">
            <appender-ref ref="CONSOLE_SIMPLE" />
            <appender-ref ref="SQL" />
        </logger>

        <logger name="JOB" level="DEBUG" additivity="false">
            <appender-ref ref="CONSOLE" />
            <appender-ref ref="JOB" />
        </logger>

        <root level="INFO">
            <appender-ref ref="CONSOLE"/>
            <appender-ref ref="RollingFileInfo"/>
            <appender-ref ref="RollingFileWarn"/>
            <appender-ref ref="RollingFileError"/>
        </root>

    </loggers>

</configuration>